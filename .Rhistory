paste("Project", id, "with", runif(1), "Surveys"),
paste("Name: ", name),
paste("Start date: ", start_date),
paste("End date: ", end_date),
sep = "\n"
)
})
)
format_all_project_resp <- function(project){
print(project$projectData$end_date)
df <- data.frame(project_id = project$projectData$id,
project_name = project$projectData$name,
project_description = NA,
start_date = project$projectData$start_date
# end_date = if(is.null(project$projectData$end_date)) NA
)
df
}
list_projects()
#'
format_all_project_resp <- function(project){
print(project$projectData$end_date)
df <- data.frame(project_id = project$projectData$id,
project_name = project$projectData$name,
project_description = NA,
start_date = project$projectData$start_date,
end_date = if(is.null(project$projectData$end_date)) NA
)
df
}
list_projects()
#'
format_all_project_resp <- function(project){
print(project$projectData$end_date)
df <- data.frame(project_id = project$projectData$id,
project_name = project$projectData$name,
project_description = NA,
start_date = project$projectData$start_date,
end_date = if(is.null(project$projectData$end_date)) NA
)
print(df)
df
}
list_projects()
#'
format_all_project_resp <- function(project){
print(project$projectData$end_date)
df <- data.frame(project_id = project$projectData$id,
project_name = project$projectData$name,
project_description = NA,
start_date = project$projectData$start_date,
end_date = ifelse(is.null(project$projectData$end_date), project$projectData$end_date, NA)
)
print(df)
df
}
list_projects()
#'
format_all_project_resp <- function(project){
print(project$projectData$end_date)
df <- data.frame(project_id = project$projectData$id,
project_name = project$projectData$name,
project_description = NA,
start_date = project$projectData$start_date,
end_date = ifelse(is.null(project$projectData$end_date), NA, project$projectData$end_date)
)
print(df)
df
}
list_projects()
#'
format_all_project_resp <- function(project){
df <- data.frame(project_id = project$projectData$id,
project_name = project$projectData$name,
project_description = NA,
start_date = project$projectData$start_date,
end_date = ifelse(is.null(project$projectData$end_date), NA, project$projectData$end_date)
)
df
}
list_projects()
#'
format_all_project_resp <- function(project){
df <- data.frame(project_id = project$projectData$id,
project_name = project$projectData$name,
project_description = NA,
start_date = project$projectData$start_date,
end_date = ifelse(is.null(project$projectData$end_date), NA, project$projectData$end_date)
)
df
}
list_projects()
#'
use_all_project <- function(project){
p <- Project$new(
id = as.numeric(project$projectData$project$project_id),
name = project$projectData$project$project_name,
start_date = as.Date(project$projectData$project$start_date),
end_date = ifelse(is.null(project$projectData$project$end_date), NA, project$projectData$project$end_date)
comments = project$projectData$project$comments,
#'
format_all_project_resp <- function(project){
df <- data.frame(project_id = project$projectData$id,
project_name = project$projectData$name,
project_description = NA,
start_date = project$projectData$start_date,
end_date = ifelse(is.null(project$projectData$end_date), NA, project$projectData$end_date)
)
df
}
list_projects()
#'
use_all_project <- function(project){
p <- Project$new(
id = as.numeric(project$projectData$project$project_id),
name = project$projectData$project$project_name,
start_date = as.Date(project$projectData$project$start_date),
end_date = ifelse(is.null(project$projectData$project$end_date), NA, project$projectData$project$end_date),
comments = project$projectData$project$comments,
objectives = project$projectData$objectives$objectives
)
p
}
#' @examples
get_project_details <- function(project_id) {
if (!has_internet()) stop("No internet connection.", call. = FALSE)
res <- catchErrors(sims_request(req_url = get_project_route(project_id)) |>
resp_body_json())
use_project(res)
}
document()
devtools::check()
load_all()
devtools::check()
document()
library(devtools)
document()
library(httr2)
document()
document()
install.packages("devtools")
install.packages("devtools")
document()
document()
libary(devtools)
library(devtools)
document()
load_all()
library(devtools)
load_all()
load_all()
load_all()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::load_all()
devtools::load_all()
has_internet()
has_internet()
devtools::load_all()
libary(devtools)
library(devtools)
devtools::load_all()
devtools::load_all()
library(devtools)
devtools::load_all()
rlang::last_error()
devtools::load_all()
install()
load_all(reset=TRUE)
load_all("./")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all("biohubr")
getwd()
create_package()
create_package('.')
cd ..
cd ..
document()
roxygen2::document()
roxygensize()
roxygenise()
roxygen2::roxygenise()
document()
document()
roxygen2::document()
check()
check()
check()
load_all()
load_all()
devtools::document()
library(roxygen2)
devtools::document()
library(devtools)
devtools::document()
devtools::document()
devtools::document(".")
devtools::document(".")
devtools::document(".")
load_all()
load_all()
load_all()
devtools::document(".")
devtools::document(".")
devtools::document(".")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
load_all()
load_all()
library(devtools)
library(devtools)
load_all()
login()
styler:::style_active_file()
login()
load_all()
login()
get_my_projects()
get_my_projects()
load_all()
get_my_projects()
login()
login()
login()
get_sims_api_route()
get_login_route()
login()
get_keycloak_token_url
get_keycloak_token_url()
request(paste0(get_sims_api_route(), get_login_route())) |>
req_oauth_auth_code(client, auth_url = get_keycloak_auth_url) |>
req_perform()
client <- oauth_client(
id = get_keycloak_client_id(),
token_url = get_keycloak_token_url()
)
request(paste0(get_sims_api_route(), get_login_route())) |>
req_oauth_auth_code(client, auth_url = get_keycloak_auth_url) |>
req_perform()
login()
login()
load_all()
login()
get_all_projects()
login()
load_all()
get_all_projects()
get_my_projects()
search()
load_all()
get_my_projects()
login()
get_my_projects()
pkg.env$biohubr_auth
pkg.env
load_all()
pkg.env
login()
pkg.env$biohubr_auth
get_my_projects()
pkg.env$biohubr_auth
pkg.env$biohubr_auth$user
get_my_projects()
#' Get Projects that the current user belongs to
#'
#' @return A dataframe
#' @export
#'
pkg.env$biohubr_auth
load_all()
login()
get_my_projects()
load_all()
get_my_projects()
login()
get_my_projects()
lod_all()
load_all()
login()
get_my_projects()
document()
load_all()
login()
get_my_projects()
get_all_projects()
get_surveys(2)
get_project_details(2)
load_all()
get_my_projects()
login()
get_my_projects()
get_project_details(2)
login()
get_all_projects()
document()
library(devtools)
library(devtools)
document()
login()
login()
load_all()
login()
load_all()
load_all()
load_all()
exists("biohubr_auth", where='pkg.env')
exists("biohubr_auth", where='env.pkg')
pkg.env <<- new.env()
exists("biohubr_auth", where='env.pkg')
exists("biohubr_auth", where='env.pkg')
exists("biohubr_auth", where='pkg.env')
?exists
load_all()
load_all()
load_all()
login()
login()
load_all()
login()
is.null(pkg.env$biohubr_auth)
pkg.env$biohubr_auth
pkg.env
pkg.env$biohub_auth
pkg.env$biohubr_auth
load_all()
login()
load_all()
login()
is.environment(pkg.env)
is.environment(pkg.envv)
is.environment(pkg.envv)
load_all()
login()
search()
search("package:biohubr")
load_all()
login()
load_all()
login()
load_all()
login()
load_all()
login()
load_all()
load_all()
login()
load_all()
login()
load_all()
login()
login()
load_all()
login()
login()
load_all()
login()
load_all()
login()
load_all()
login()
load_all()
login()
load_all()
login()
styler:::style_active_file()
load_all()
login()
login()
login()
load_all()
login()
login()
load_all()
library(load_all)
library(devtools)
load_all()
login()
get_my_projects()
styler:::style_active_file()
get_my_projects()
load_all()
get_my_projects()
load_all()
get_my_projects()
load_all()
get_my_projects()
get_my_projects()
load_all()
get_my_projects()
test <- new.env()
search()
load_all()
parent.env(pkg.env)
parent.env(new.env())
search()
pkg.env <- new.env()
search()
ls(package:biohubr)
ls(package:base)
load_all()
search()
ls(biohubr)
ls('package:biohubr')
document()
load_all()
ls('package:biohubr')
document()
document()
load_all()
document()
ls('package:biohubr')
load_all()
get_my_projects()
exists("pkg.env$biohubr_auth")
exists("biohubr_auth")
exists("biohubr_auth", where = -1)
load_all()
get_my_projects()
pkg.env
pkg.env$biohubr_auth
exists("biohubr_auth", where = "pkg.env")
pkg.env$biohubr_auth
load_all()
get_my_projects()
load_all()
get_my_projects()
load_all()
get_my_projects()
load_all()
get_my_projects()
login()
load_all()
get_my_projects()
login()
load_all()
login()
pkg.env$biohubr_auth$user
styler:::style_active_file()
load_all()
login()
get_my_projects()
has_auth()
load_all()
get_my_projects()
login()
load_all()
login()
load_all()
login()
get_my_projects()
pkg.env$biohubr_auth$client
pkg.env$biohubr_auth$user
load_all()
login()
load_all()
load_all()
login()
login()
get_my_projects()
get_all_projects()
get_project_details(3)
get_project_details(2)
load_all()
library(devtools)
load_all()
login()
document()
bcgovr:::lifecycle_badge_addin()
styler:::style_active_file()
load_all()
library(devtools)
load_all()
login()
login_sims()
get_my_projects()
get_my_projects()
load_all()
login()
login_sims()
get_my_projects()
get_project_details(1)
login()
load_all()
login_sims()
get_project_details(1)
1%%1
load_all()
login_sims()
get_project_details(1)
load_all()
login_sims()
get_project_details(1)
load_all()
login_sims()
get_project_details(1)
get_surveys(1)
load_all()
login_sims()
get_surveys(1)
library(devtools)
document()
load_all()
library(devtools)
load_all()
git add .
git
